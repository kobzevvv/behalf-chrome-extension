name: Deploy to Development Environment

on:
  push:
    branches:
      - main
      - feat/*
      - feature/*
    paths:
      - 'worker/**'
      - 'wrangler*.toml'
      - 'package.json'
      - '.github/workflows/deploy-dev.yml'
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    name: Deploy to Development Environment
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build TypeScript files
      run: |
        echo "Building TypeScript files..."
        npm run build
        echo "TypeScript build completed successfully!"
        
    - name: Deploy to Development Environment
      id: deploy
      run: |
        echo "🚀 Deploying to DEVELOPMENT environment..."
        echo "Worker will be deployed as: behalf-task-manager-dev"
        npx wrangler deploy --name behalf-task-manager-dev --env development
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        
    - name: Upload secrets to Development Worker
      id: upload-secrets
      continue-on-error: true
      run: |
        echo "Uploading DATABASE_URL secret to development worker..."
        echo "${{ secrets.DATABASE_URL_DEV }}" | npx wrangler secret put DATABASE_URL --name behalf-task-manager-dev || echo "Secret upload failed - this is optional"
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        
    - name: Test Development Worker Health
      id: health-check
      run: |
        echo "🏥 Testing development worker health endpoint..."
        
        # Wait for deployment to propagate
        echo "⏳ Waiting 30 seconds for deployment to propagate..."
        sleep 30
        
        WORKER_URL="https://behalf-task-manager-dev.YOUR_SUBDOMAIN.workers.dev"
        echo "Testing worker at: $WORKER_URL"
        
        # Try up to 3 times with 10 second delays
        for i in 1 2 3; do
          echo "Health check attempt $i..."
          
          HTTP_CODE=$(curl -s -o health-response.json -w "%{http_code}" "$WORKER_URL/api/check-task" -X POST -H "Content-Type: application/json" -d '{"browserId": "test_browser_dev"}' || echo "000")
          
          if [ "$HTTP_CODE" = "200" ]; then
            echo "✅ Development worker health check passed!"
            cat health-response.json | jq '.' || cat health-response.json
            echo "health_status=healthy" >> $GITHUB_OUTPUT
            break
          else
            echo "❌ Health check failed with status: $HTTP_CODE"
            if [ -f health-response.json ]; then
              cat health-response.json
            fi
            
            if [ $i -lt 3 ]; then
              echo "Waiting 10 seconds before retry..."
              sleep 10
            else
              echo "health_status=failed" >> $GITHUB_OUTPUT
            fi
          fi
        done
        
    - name: Generate deployment summary
      if: always()
      run: |
        echo "## 🚀 Development Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Deployment Info" >> $GITHUB_STEP_SUMMARY
        echo "- **Environment:** 🧪 Development" >> $GITHUB_STEP_SUMMARY
        echo "- **Worker Name:** behalf-task-manager-dev" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        echo "### Test Results" >> $GITHUB_STEP_SUMMARY
        echo "- **Secret Upload:** ${{ steps.upload-secrets.outcome || 'not run' }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Health Check:** ${{ steps.health-check.outputs.health_status || 'not run' }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        echo "### 📝 Next Steps" >> $GITHUB_STEP_SUMMARY
        echo "1. **Development Worker:** Use this for testing your changes" >> $GITHUB_STEP_SUMMARY
        echo "2. **Production Deploy:** Run \`npm run deploy\` manually when ready" >> $GITHUB_STEP_SUMMARY
        echo "3. **Chrome Extension:** Update popup with dev worker URL for testing" >> $GITHUB_STEP_SUMMARY
        
    - name: Upload test artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: dev-deployment-results-${{ github.run_number }}
        path: |
          health-response.json
        retention-days: 7
